basePath: /
definitions:
  entity.BaseSetting:
    properties:
      id:
        description: 记录id
        type: string
      keyer:
        description: key,代码定义
        type: string
      name:
        description: 设置名称
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 状态
        type: integer
      sys_cdate:
        description: 创建日期
        type: string
      sys_cuser:
        description: 创建人
        type: integer
      val:
        description: 设置值
        type: string
    type: object
  req.BaseSettingReqVO:
    properties:
      ext:
        description: 这里写扩展
        type: string
      id:
        description: 记录id
        type: string
      keyer:
        description: key,代码定义
        type: string
      name:
        description: 设置名称
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 状态
        type: integer
      sys_cdate:
        description: 创建日期
        type: string
      sys_cuser:
        description: 创建人
        type: integer
      val:
        description: 设置值
        type: string
    type: object
info:
  contact:
    email: 35802713@qq.com
    name: jif
    url: http://www.swagger.io/support
  description: Golang API 演示, 主要是促成代码生成和数据库以及缓存使用,编写简单易于开发业务的框架 <br>技术栈:GOLang 1.12
    ,  GIN , XORM , mysql , redis
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://git.vs9.cn
  title: Gin API123
  version: 1.0b125
paths:
  /api/v1/demo/index:
    post:
      consumes:
      - application/json
      parameters:
      - description: 参数对象,注意,此参数应该被包含在通用参数的data属性内
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/req.BaseSettingReqVO'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0000,"data":{},"message":"","success":true}'
          schema:
            type: string
      summary: 演示
  /api/v1/demo/index1:
    post:
      consumes:
      - application/json
      parameters:
      - description: 参数对象,注意,此参数应该被包含在通用参数的data属性内
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.BaseSetting'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0000,"data":{},"message":"","success":true}'
          schema:
            type: string
      summary: 演示1
swagger: "2.0"
